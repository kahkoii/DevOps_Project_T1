name: CI for Dev Unit Tests

on: [push, pull_request]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - id: 'update_worksheet'
      uses: jroehl/gsheet.action@v1.0.0 # you can specify '@release' to always have the latest changes
      with:
        spreadsheetId: ${{ secrets.GOOGLE_SHEET_ID }}
        commands: | # list of commands, specified as a valid JSON string
          [
            { "command": "addWorksheet", "args": { "worksheetTitle": "<worksheetTitle>" }},
            { "command": "updateData", "args": { "data": [["A1", "A2", "A3"]] }},
            { "command": "getData", "args": { "range": "'<worksheetTitle>'!A2:B3" } }
          ]
      env:
        GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
        GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}

    - name: dump results
      env:
        #  the output of the action can be found in ${{ steps.update_worksheet.outputs.results }}
        RESULTS: ${{ steps.update_worksheet.outputs.results }}
      run: echo "$RESULTS" | jq

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
        
    - name: Install Libraries
      run: |
        pip install flake8 pytest pytest-cov coverage pytest-mock
      
    - name: Checkout Own Repo
      uses: actions/checkout@v2
      with: 
        repository: np-devops-team1/DevOps_Main
        
    - name: Checkout Test Script
      if: startsWith(github.ref, 'refs/heads/feat/')
      uses: actions/checkout@v2
      with:
        repository: np-devops-team1/DevOps_Dev_UnitTest
        path: test_cases
        token: ${{ secrets.DEV_REMOTE }}

    - name: Analysing code with flake8
      run: |
        flake8
        
    - name: Checkout Test Script
      if: startsWith(github.ref, 'refs/heads/feat/')
      uses: actions/checkout@v2
      with:
        repository: np-devops-team1/DevOps_Dev_UnitTest
        path: test_cases
        token: ${{ secrets.DEV_REMOTE }}
        
    - name: Build coverage file
      if: startsWith(github.ref, 'refs/heads/feat/')
      run: |
        name_branch="$(cut -d'/' -f2 <<< ${GITHUB_REF#refs/heads/})"
        mv ./test_cases/test_'$name_branch'.py ./
        pytest test_'$name_branch'.py --cache-clear --cov=app test/ > pytest-coverage.txt
        
    - name: Comment coverage
      if: startsWith(github.ref, 'refs/heads/feat/')
      uses: coroo/pytest-coverage-commentator@v1.0.2
      with:
        pytest-coverage: pytest-coverage.txt

