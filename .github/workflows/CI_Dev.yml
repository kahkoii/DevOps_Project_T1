name: CI for Dev Unit Tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Libraries
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov coverage pytest-mock

      - name: Checkout Own Repo
        uses: actions/checkout@v2
        with:
          repository: np-devops-team1/DevOps_Main

      - name: Analysing code with flake8
        run: |
          flake8 main.py

      - name: Get branch id (push)
        if: github.event_name == 'push'
        id: get_branch_id_push
        run: echo "##[set-output name=branch;]$(echo $(cut -d'/' -f2 <<< ${GITHUB_REF#refs/heads/}))"

      - name: Get branch id (pull request)
        if: github.event_name == 'pull_request'
        id: get_branch_id_pr
        run: echo "##[set-output name=branch;]$(echo $(cut -d'/' -f2 <<< ${GITHUB_HEAD_REF}))"

      - name: Checkout One Test Script
        if: |
          startsWith(github.ref, 'refs/heads/feat/') ||
          startsWith(github.head_ref, 'feat/')
        uses: actions/checkout@v2
        with:
          repository: np-devops-team1/DevOps_Dev_UnitTest
          path: test_cases
          token: ${{ secrets.DEV_REMOTE }}

      - name: Checkout ALL Test Script
        if: |
          startsWith(github.ref, 'refs/heads/main') ||
          startsWith(github.head_ref, 'main')
        uses: actions/checkout@v2
        with:
          repository: np-devops-team1/DevOps_Dev_UnitTest
          path: test_cases
          token: ${{ secrets.DEV_REMOTE }}

      - name: Generate coverage report for branch test (push)
        if: |
          startsWith(github.ref, 'refs/heads/feat/')
        run: |
          pytest --cov=./ --cov-report=xml test_cases/test_cases/${{steps.get_branch_id_push.outputs.branch}}

      - name: Generate coverage report for branch test (pull request)
        if: |
          startsWith(github.head_ref, 'feat/')
        run: |
          pytest --cov=./ --cov-report=xml test_cases/test_cases/${{steps.get_branch_id_pr.outputs.branch}}

      - name: Generate coverage report for main test (push)
        if: |
          startsWith(github.ref, 'refs/heads/main')
        run: |
          pytest --cov=./ --cov-report=xml test_cases/test_cases

      - name: Generate coverage report for branch main test (pull request)
        if: |
          startsWith(github.head_ref, 'main')
        run: |
          pytest --cov=./ --cov-report=xml test_cases/test_cases

      - name: Upload coverage to Codecov for branch test
        if: |
          startsWith(github.ref, 'refs/heads/main') ||
          startsWith(github.head_ref, 'main') ||
          startsWith(github.ref, 'refs/heads/feat/') || 
          startsWith(github.head_ref, 'feat/')
        uses: codecov/codecov-action@v2
        with:
          token: 81e01a89-f6b5-4711-b224-d09162825fad
          directory: ./
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          verbose: true

      - name: Build coverage file for branch test (push)
        if: |
          startsWith(github.ref, 'refs/heads/feat')
        run: |
          pytest --cache-clear --cov=. test_cases/test_cases/${{steps.get_branch_id_push.outputs.branch}} > pytest-coverage.txt

      - name: Build coverage file for branch test (pull request)
        if: |
          startsWith(github.head_ref, 'feat')
        run: |
          pytest --cache-clear --cov=. test_cases/test_cases/${{steps.get_branch_id_pr.outputs.branch}} > pytest-coverage.txt

      - name: Build coverage file for main test (push)
        if: |
          startsWith(github.ref, 'refs/heads/main')
        run: |
          pytest --cache-clear --cov=. test_cases/test_cases > pytest-coverage.txt

      - name: Build coverage file for main test (pull request)
        if: |
          startsWith(github.head_ref, 'main')
        run: |
          pytest --cache-clear --cov=. test_cases/test_cases > pytest-coverage.txt

      - name: Comment coverage for test
        if: |
          startsWith(github.ref, 'refs/heads/feat/') || 
          startsWith(github.head_ref, 'feat/') ||
          startsWith(github.ref, 'refs/heads/main') ||
          startsWith(github.head_ref, 'main')
        uses: coroo/pytest-coverage-commentator@v1.0.2
        with:
          pytest-coverage: pytest-coverage.txt
